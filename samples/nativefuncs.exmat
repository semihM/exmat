var lis1 = list()       // []
var lis2 = list(5)      // [null, null, null, null, null]
var lis3 = list(3,-2)   // [-2, -2, -2]

var mat1 = matrix(2,2)        // [[null, null], [null, null]]
var mat2 = matrix(2,2,66)     // [[66, 66], [66, 66]]

function MatrixFill(row, col)
{
    return row + "|" + col
}

var mat3 = matrix(2,2,MatrixFill)  // [["0|0", "0|1"], ["1|0", "1|1"]]
var mat4 = matrix(2,2,$(i,j) i == j ? 1 : 0)  // [[1, 0], [0, 1]]

lis3[2] = 10       // lis3 = [-2, -2, 10]
lis3[1] *= -4       // lis3 = [-2, 8, 10]
mat4[0][1] = 99     // mat4 = [[1, 99], [0, 1]]

// Kartezyen çarpım
printl([1,2] *.* [3,4]) // [[1, 3], [1, 4], [2, 3], [2, 4]]
// Transpoz
printl(mat4')       // [[1, 0], [99, 1]]
// Matris çarpımı
printl(mat4.*mat4)  // [[1, 198], [0, 1]]


var numrange = range(-4,4);     // [-4, -3, -2, -1, 0 , 1, 2, 3]
var numrange2 = range(0,4,0.5); // [0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5]
var numrangei = rangei(-4,4);   // [-4, -3, -2, -1, 0 , 1, 2, 3, 4]

printl( map($(num) num + 2 , numrange ))               // [-2, -1, 0, 1, 2 , 3, 4, 5]
printl( map($(n1, n2) n1 + n2 , numrange, range(8) ))   // [-4, -2, 0, 2, 4, 6, 8, 10]

printl( filter($(n) n % 2 == 0 , numrangei ))   // [-4, -2, 0, 2, 4]

printl( sum(1,2,3,4,5) )              // 15
printl( parse(sum, rangei(1,5)) )     // 15
printl( mul(1,3,5,7,9) )              // 945
printl( parse(mul, rangei(1,9,2)) )   // 945

// Rastgele sayılar
srand(10)                       // seed olarak 10 değerini kullan
var random_int = rand()         // [0,2147483647] aralığından
var random_int1 = rand(10)      // [0,10] aralığından
var random_int1 = rand(-5,5)    // [-5,5] aralığından
var random_float = randf()      // [0,1] aralığından

// Reel ve sanal kısmın katsayılarından kompleks sayı
var complex_num1 = complex(3, 4)                    // 3 + 4i
// Uzunluk ve argüment ile kompleks sayı
var complex_num2 = complex2(5, 0.92729521800161225) // 3 + 4i

printl(complex_num1.real())    // 3
printl(complex_num1.img())     // 4
printl(complex_num1.abs())     // 5
printl(complex_num1.phase())   // 0.92729521800161225
printl(complex_num1.conj())    // 3 - 4i