// Sequence(0) = 1, Sequence(1) = 5
// Sequence(n) = Sequence(n-2) + Sequence(n-1) + 5
//  ifadelerine denk olan dizi tanımı
seq Sequence(0:1, 1:5) Sequence(n-2) + Sequence(n-1) + 5
printl(Sequence)            // SEQUENCE(A, 1 parameters)
printl(typeof Sequence)     // CLOSURE
printl(Sequence(0))         // 1
printl(Sequence(1))         // 5
printl(Sequence(2))         // 1 + 5 + 5 = 11
print(map(Sequence, range(10)));

// Geometric
printl("\n------------");
var ft = time()
seq Factorial(0:1.0, 1:1.0) Factorial(n-1) * n
printl(Factorial)
print(map(Factorial, range(10)));
printl("\n f seq time: "+(time() - ft))

var fft = time();
function FactorialF(x)  return x < 2 ? 1 : (x * FactorialF(x-1))
printl(FactorialF)
print(map(FactorialF, range(10)));
print("\n f func time: "+(time() - fft))

// Arithmetic
printl("\n------------");
seq OddNumbers() 2*n + 1
printl(OddNumbers)
print(map(OddNumbers,range(10)))

printl("\n------------");
seq EvenNumbers() 2*n
printl(EvenNumbers)
print(map(EvenNumbers,range(10)))