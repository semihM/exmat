var x       // null değerli değişken tanımı
var y,z     // birden fazla değişken tanımı
printl(x)   
printl(y)
printl(z)

var int_var = 985                       // Tamsayı
var float_var = 0.12345678910111        // Ondalıklı
var complex_var = 3 + 4i                // Kompleks
var space_var = @R@                     // Uzay
var boolean_var = true                  // Boolean
var string_var = "bir \"yazı\" dizisi!" // Yazı dizisi

var verbose_str = $"this is a
verbose string.
Which allow ""strings like this"" and 
escape chars as they are written \ \n \t \r" // Syntax highlighting is broken!

printl(int_var)   
printl(float_var)   
printl(complex_var)   
printl(space_var)  
printl(boolean_var)  
printl(string_var)   
printl(verbose_str)   

var list_var = [1, 3, 5]                        // Liste
var dict_var = { key_1 = 10, key_2 = "val_2" }  // Tablo

printl(list_var)   // [1, 3, 5]
printl(dict_var)   // { key_1 = 10, key_2 = "val_2" }

printl(typeof list_var)            // LIST
printl(typeof dict_var)            // DICT

// Veri tipi isimleri
printl(typeof x)            // NULL
printl(typeof int_var)      // INTEGER
printl(typeof float_var)    // FLOAT
printl(typeof complex_var)  // COMPLEX
printl(typeof space_var)    // SPACE
printl(typeof boolean_var)    // BOOLEAN
printl(typeof string_var)   // STRING

var X = null, Y = "\"a string\"", Z = 3
printl("----------")
printl("X: " + X + " Y: " + Y + " Z: " + Z);

printl("----------")
var a = 2.2;
printl(typeof a)
printl(a);
a += 4
printl(a);

printl("----------")
var s = 31415e-4
printl(typeof s)
printl(s) 

printl("----------")
var hx = 0xff
var hx2 = 0x00ff
var hx3 = 0xABCDEF01234
printl(typeof hx)
printl(hx) 
printl(hx2) 
printl(hx3)  

printl("----------")
var bin32_5 = 0b0000101
var bin32_minus1 = 0b11111111111111111111111111111111 // -1
var bin32_minimum = 0b10000000000000000000000000000000 // INT32_MIN
var bin32_maximum = 0b01111111111111111111111111111111 // INT32_MAX
var bin64_minus1 = 0B1111111111111111111111111111111111111111111111111111111111111111 // -1
var bin64_minimum = 0B1000000000000000000000000000000000000000000000000000000000000000 // INT64_MIN
var bin64_maximum = 0B0111111111111111111111111111111111111111111111111111111111111111 // INT64_MAX

printl(typeof bin32_5)
printl(bin32_5) 
printl(bin32_minus1) 
printl(bin32_minimum)  
printl(bin32_maximum)  

printl(bin64_minus1)  
printl(bin64_minimum)  
printl(bin64_maximum)  

printl("----------")
var l = [1,3,5,7]
printl(typeof l)
printl(l) 

printl("----------")
var d = 
{
    "key_1" : "value_1"
    key_2 = "value_2"
    "0" : 999
}
printl(typeof d)
printl(d)

// Sabitler
printl("pi: " + PI)                         // pi sayısı  : 3.14159265358979
printl("tau: " + TAU)                       // tau sayısı : 6.28318530717959
printl("altın oran: " + GOLDEN)             // altın oran : 1.61803398874989
printl("epsilon: " + EPSILON)               // epsilon    : 5E-324
printl("radyan olarak 1 derece: " + DEGREE) // radyan cinsinden 1 derece : 0.01745329251994

printl("int8 max: " + INT8_MAX)
printl("int8 min: " + INT8_MIN)
printl("uint8 max: " + UINT8_MAX)

printl("int16 max: " + INT16_MAX)
printl("int16 min: " + INT16_MIN)
printl("uint16 max: " + UINT16_MAX)

printl("int32 max: " + INT32_MAX)
printl("int32 min: " + INT32_MIN)
printl("uint32 max: " + UINT32_MAX)

printl("int64 max: " + INT64_MAX)
printl("int64 min: " + INT64_MIN)

printl("float32 max: " + FLOAT32_MAX)
printl("float32 min: " + FLOAT32_MIN)
printl("float64 max: " + FLOAT64_MAX)
printl("float64 min: " + FLOAT64_MIN)

printl("----------")
var c = 3.125 - 4.2i
printl(typeof c)
printl(c)
printl(c.real())
printl(c.img())
printl(c.abs())
printl(c.phase())
printl(c.conj())

printl("----------")
printl("R space: "+ string(SPACES.R))
printl("R^n space: "+ string(SPACES.Rn))